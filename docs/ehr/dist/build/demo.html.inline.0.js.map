{
  "version": 3,
  "sources": ["../../../../build/ehr/dist/build/_snowpack/pkg/uuid.js", "../../../../build/ehr/dist/build/swm.js"],
  "sourcesContent": ["function createCommonjsModule(fn, basedir, module) {\n\treturn module = {\n\t\tpath: basedir,\n\t\texports: {},\n\t\trequire: function (path, base) {\n\t\t\treturn commonjsRequire(path, (base === undefined || base === null) ? module.path : base);\n\t\t}\n\t}, fn(module, module.exports), module.exports;\n}\n\nfunction commonjsRequire () {\n\tthrow new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n\nvar rngBrowser = createCommonjsModule(function (module) {\n// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n});\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]\n  ]).join('');\n}\n\nvar bytesToUuid_1 = bytesToUuid;\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rngBrowser();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid_1(b);\n}\n\nvar v1_1 = v1;\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rngBrowser)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid_1(rnds);\n}\n\nvar v4_1 = v4;\n\nvar uuid = v4_1;\nuuid.v1 = v1_1;\nuuid.v4 = v4_1;\n\nvar uuid_1 = uuid;\n\nvar v4$1 = uuid_1.v4;\nexport { v4$1 as v4 };\n", "import { v4 } from \"./_snowpack/pkg/uuid.js\";\n\n// Sanity checking functions.\n\nconst expectedMessageType = Object.prototype.toString.call({});\n\nfunction checkMessageType(message) {\n  const type = Object.prototype.toString.call(message);\n  if (type !== expectedMessageType) {\n    console.error(\n      `expected a message of type \"${expectedMessageType}\", got \"${type}\"!`\n    );\n  }\n}\n\nfunction checkClientStructure(client) {\n  if (!client) {\n    console.error('A SMART client is required to use this library!');\n  }\n  else if (!client.tokenResponse) {\n    console.error('The provided SMART client has no tokenResponse attribute!');\n  }\n  if (!client.tokenResponse.smart_web_messaging_handle) {\n    console.error(\n      'SMART client is missing a smart_web_messaging_handle launch attribute!'\n    );\n  }\n  if (!client.tokenResponse.smart_web_messaging_origin) {\n    console.error(\n      'SMART client is missing a smart_web_messaging_origin launch attribute!'\n    );\n  }\n}\n\n// Helper to enable the HTML5 postMessage API in the caller's context.\n\nexport function enablePostMessage(targetOrigin, callback) {\n  const messageEventHandler = function (e) {\n    if (e.origin === targetOrigin && e.data) {\n      checkMessageType(e.data);\n      callback(e.data);\n    }\n  }\n  window.addEventListener('message', messageEventHandler, false);\n}\n\n// TODO: include the SWM IG version number here somewhere?\n// TODO: include links in error messages to the relevant IG sections...\n// TODO: create docstrings for all functions.\n\nfunction getMessage(messageType, client) {\n  if (!messageType) {\n    console.error('Messages SHALL specify a messageType');\n  }\n  checkClientStructure(client);\n  return {\n    'messageType': messageType,\n    'messagingHandle': client.tokenResponse.smart_web_messaging_handle || '',\n    'messageId': v4(),\n    'payload': {}\n  }\n}\n\nfunction getResponse(responseToMessageId) {\n  if (!responseToMessageId) {\n    console.error('A response MUST have a responseToMessageId present.');\n  }\n  return {\n    'responseToMessageId': responseToMessageId,\n    'messageId': v4(),\n    'payload': {},\n  }\n}\n\nexport function getHandshakeMessage(client) {\n  return getMessage('status.handshake', client);\n}\n\nexport function getHandshakeResponse(responseToMessageId) {\n  return getResponse(responseToMessageId);\n}\n\nexport function getUiDoneMessage(client) {\n  return getMessage('ui.done', client);\n}\n\nfunction getUiResponse(responseToMessageId, status, statusDetailText) {\n  return {\n    ...getResponse(responseToMessageId),\n    'payload': {\n      'status': status || '',\n      'statusDetail': {\n        'text': statusDetailText || '',\n      }\n    }\n  }\n}\n\nexport function getUiDoneResponse(responseToMessageId, status, statusDetailText) {\n  return getUiResponse(responseToMessageId, status, statusDetailText);\n}\n\nexport function getUiLaunchActivityMessage(client, activityType, activityParameters) {\n  return {\n    ...getMessage('ui.launchActivity', client),\n    'payload': {\n      'activityType': activityType,\n      'activityParameters': activityParameters,\n    }\n  }\n}\n\nexport function getUiLaunchActivityResponse(responseToMessageId, status, statusDetailText) {\n  return getUiResponse(responseToMessageId, status, statusDetailText);  \n}\n\nfunction getScratchpadResponse(responseToMessageId, status, location, outcome) {\n  const payload = { 'status': status };\n  // Add the optional scratchpad response fields.\n  if (location) {\n    payload['location'] = location;\n  }\n  if (outcome) {\n    payload['outcome'] = outcome;\n  }\n  return {\n    ...getResponse(responseToMessageId),\n    'payload': payload,\n  }\n}\n\nexport function getScratchpadCreateMessage(client, resource) {\n  return {\n    ...getMessage('scratchpad.create', client),\n    'payload': {\n      'resource': resource,\n    }\n  }\n}\n\nexport function getScratchpadCreateResponse(responseToMessageId, status, location, outcome) {\n  return getScratchpadResponse(responseToMessageId, status, location, outcome);\n}\n\nexport function getScratchpadUpdateMessage(client, resource, location) {\n  return {\n    ...getMessage('scratchpad.update', client),\n    'payload': {\n      'location': location,\n      'resource': resource,\n    }\n  }\n}\n\nexport function getScratchpadUpdateResponse(responseToMessageId, status, location, outcome) {\n  return getScratchpadResponse(responseToMessageId, status, location, outcome);\n}\n\nexport function getScratchpadDeleteMessage(client, location) {\n  return {\n    ...getMessage('scratchpad.delete', client),\n    'payload': {\n      'location': location,\n    }\n  }\n}\n\nexport function getScratchpadDeleteResponse(responseToMessageId, status, outcome) {\n  return getScratchpadResponse(responseToMessageId, status, null, outcome);\n}\n\nexport function sendMessage(client, message) {\n  checkMessageType(message);\n  checkClientStructure(client);\n  const targetOrigin = client.tokenResponse.smart_web_messaging_origin;\n\n  if (window.parent) {\n    window.parent.postMessage(message, targetOrigin);\n  } else if (window.opener) {\n    window.opener.postMessage(message, targetOrigin);\n  } else {\n    console.error('Unable to send message - no receiver!');\n  }\n}\n\nexport function sendResponse(appWindow, message, appOrigin) {\n  checkMessageType(message);\n  appWindow.postMessage(message, appOrigin);\n}\n"],
  "mappings": "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",
  "names": []
}
